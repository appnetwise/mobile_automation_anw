name: Mobile Automation Testing (Android Emulator)

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Download and extract Android SDK
        run: |
          mkdir -p /opt/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O /opt/android-sdk/sdk-tools-linux.zip
          unzip -q /opt/android-sdk/sdk-tools-linux.zip -d /opt/android-sdk
        shell: bash

      - name: List files under /opt/android-sdk
        run: |
            ls -la /opt/android-sdk/cmdline-tools
            ls -la /opt/android-sdk/cmdline-tools/bin
        shell: bash


      - name: Accept Android SDK licenses
        run: y | /opt/android-sdk/cmdline-tools/bin/sdkmanager --licenses
      
      - name: Set up Android SDK and PATH
        run: |
          export PATH=$PATH:/opt/android-sdk/cmdline-tools/bin:/opt/android-sdk/platform-tools
          export ANDROID_HOME=/opt/android-sdk
          echo 'export PATH=$PATH:/opt/android-sdk/cmdline-tools/bin' >> $GITHUB_ENV  # Add Android SDK to PATH permanently
          echo 'export ANDROID_HOME=/opt/android-sdk' >> $GITHUB_ENV  # Add Android SDK home permanently
          y | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk "platform-tools" "platforms;android-34" "emulator" # Add any additional packages
          sleep 5  # Adjust the sleep duration as needed
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64


      - name: List files under /opt/android-sdk
        run: |
            ls -la /opt/android-sdk
            ls -la /opt/android-sdk/cmdline-tools
            ls -la /opt/android-sdk/cmdline-tools/bin
        shell: bash

    
      - name: Set up Android SDK and PATH
        run: |
          echo 'export PATH=$PATH:/opt/android-sdk/cmdline-tools/bin:/opt/android-sdk/platform-tools' >> $HOME/.bashrc
          echo 'export ANDROID_HOME=/opt/android-sdk' >> $HOME/.bashrc
          source $HOME/.bashrc
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64


      - name: Start emulator
        run: emulator -avd emulator-5554 &
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          PATH: ${{ runner.path }}:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools

      
      - name: Verify emulator command
        run: |
          echo "Checking emulator command..."
          which emulator
      
          echo "Android SDK directory contents:"
          ls -la /opt/android-sdk/cmdline-tools/latest/bin
        shell: bash
        
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/android-sdk/cmdline-tools
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Install Appium dependencies
        run: |
          cd android
          mvn install -DskipTests

      - name: Build the Android app (APK)
        run: |
          cd android
          mvn clean install

      - name: Start emulator
        run: emulator -avd emulator-5554 &
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          PATH: ${{ runner.path }}:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools
  
      - name: Install Appium and dependencies
        run: |
            npm install -g appium@v1.22
            npm install -g appium-doctor
            appium-doctor --android
        shell: bash

        

      - name: Start Appium server
        run: appium -a 127.0.0.1 -p 4723 &
      - name: Wait for Appium server to start
        run: sleep 10
      - name: Start emulator (adjust AVD name if needed)
        run: emulator -avd emulator-5554 &  # Replace with your emulator name

      - name: Run Appium tests
        run: |
          pwd
          cd android
          mvn clean test -Dsurefire.suiteXmlFiles=regression.xml -f pom.xml -X

      - name: Stop emulator (optional)
        run: adb emu kill &  # Background process to avoid interrupting tests

      - name: Stop Appium server (optional)
        run: kill $(ps aux | grep -v grep | grep appium | awk '{print $2}') || true

      - name: Upload test reports (optional)
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: target/surefire-reports/
