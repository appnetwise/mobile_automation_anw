name: Mobile Automation Testing (Android Emulator)

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Download and extract Android SDK
        run: |
          mkdir -p /opt/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O /opt/android-sdk/sdk-tools-linux.zip
          unzip -q /opt/android-sdk/sdk-tools-linux.zip -d /opt/android-sdk
        shell: bash

      - name: List files under /opt/android-sdk
        run: |
            ls -la /opt/android-sdk/cmdline-tools
            ls -la /opt/android-sdk/cmdline-tools/bin
        shell: bash

      - name: Accept Android SDK licenses
        run:  echo "y" | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk --licenses
        shell: bash

  
      - name: Set up Android SDK and PATH
        run: |
          export ANDROID_HOME=/opt/android-sdk
          export ANDROID_SDK_ROOT=/opt/android-sdk
          export PATH=$PATH:/opt/android-sdk/cmdline-tools/bin:/opt/android-sdk/platform-tools:/opt/android-sdk/emulator:/opt/android-sdk/platforms:/opt/android-sdk/tools
          echo 'export ANDROID_HOME=/opt/android-sdk' >> $GITHUB_ENV  # Add Android SDK home permanently
          echo 'export ANDROID_SDK_ROOT=/opt/android-sdk' >> $GITHUB_ENV  # Add Android SDK home permanently
          echo 'export PATH=$PATH:$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$ANDROID_HOME/platforms:$ANDROID_HOME/tools' >> $GITHUB_ENV
          echo "y" | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk "platform-tools" "platforms;android-34" "emulator" # Add any additional packages
          echo "y" | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk "tools"
          sleep 10  # Adjust the sleep duration as needed
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.22-7/x64

      - name: Verify ANDROID_SDK_ROOT
        run: | 
            echo $ANDROID_HOME
            echo $ANDROID_SDK_ROOT

      - name: List files under /opt/android-sdk
        run: |
            ls -la /opt
            ls -la /opt/android-sdk/emulator
            ls -la /opt/android-sdk
            ls -la /opt/android-sdk/cmdline-tools
            ls -la /opt/android-sdk/cmdline-tools/bin
            ls -la /opt/android-sdk/tools
        shell: bash

        
      - name: Install system image (android-30;google_apis;x86)
        run: echo "y" | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk  "system-images;android-30;google_apis;x86"
        shell: bash

      - name: List Install system image
        run: | 
            ls -la /opt/android-sdk
            ls -la /opt/android-sdk/system-images
        shell: bash

      - name: List Available SDK Packages
        run: /opt/android-sdk/cmdline-tools/bin/sdkmanager --list  --sdk_root=/opt/android-sdk 
        shell: bash
       
      - name: Create AVD
        run: |
          echo "no" | /opt/android-sdk/cmdline-tools/bin/avdmanager create avd --force --name TestAVD --package 'system-images;android-30;google_apis;x86' --device 'pixel' --sdcard 512M 
        shell: bash

      - name: List emulator devices
        run: /opt/android-sdk/emulator/emulator -list-avds 
        shell: bash      
  
   
      - name: Start Emulator Device
        run: /opt/android-sdk/emulator/emulator -avd TestAVD --verbose
        shell: bash

           
      - name: Stop emulator (optional)
        run: adb emu kill &  # Background process to avoid interrupting tests

      - name: Stop Appium server (optional)
        run: kill $(ps aux | grep -v grep | grep appium | awk '{print $2}') || true

    
