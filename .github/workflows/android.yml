# This workflow defines a job that sets up an Android environment,
# starts two emulators, and runs Appium tests in parallel using Grid.

on:
  push:
    branches:
      - master

jobs:

  grid-hub-test:
    runs-on: macOS-latest
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_AVD_HOME: ${{ github.workspace }}/.config/.android/avd
      JAVA_HOME: /Library/Java/JavaVirtualMachines/adoptopenjdk-17.jdk/Contents/Home
      JAVA_HOME_11_X64: /Library/Java/JavaVirtualMachines/adoptopenjdk-17.jdk/Contents/Home

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macOS'
        run: |
            brew install docker
            colima start
        
      # Verify Docker installation
      - name: Verify Docker installation
        run: docker version
        if: runner.os == 'macOS'

      # Install Appium and dependencies
      - name: Install Appium and dependencies
        run: |
          docker pull selenium/standalone-chrome:latest
          npm install -g appium@1.22
          npm install -g appium-doctor
          appium-doctor --android
        shell: bash


   
       # Start Selenium Grid Hub
      - name: Start Selenium Grid Hub
        run: docker run -d --name selenium-hub -p 4444:4444 selenium/standalone-chrome:latest
          
      - name: Start Appium server
        run: appium -a 127.0.0.1 -p 4723 &
        
      - name: Wait for Appium server to start
        run: sleep 10
          
      - name: Check Port Numbers in Use
        run: lsof -i -P -n | grep LISTEN
        shell: bash

      # Download Android SDK tools (using custom location)
      - name: Download Android SDK tools
        uses: android-actions/setup-android@v3
        with:
          sdk_root: ${{ env.ANDROID_SDK_ROOT }}

      # Install additional packages (modify list as needed)
      - name: Install additional Android SDK packages
        run: sdkmanager --install 'build-tools;30.0.0' 'platform-tools' 'platforms;android-30' 'platforms;android-29' 'cmdline-tools;latest' 'emulator'

      # Set up Android SDK and PATH
      - name: Set up Android SDK and PATH
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platforms" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/tools" >> $GITHUB_PATH
          echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "platforms;android-29" "emulator"

      # Install system image (android-29;google_apis;x86_64)
      - name: Install system image
        run: |
          echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "system-images;android-30;google_apis;x86_64" "system-images;android-29;google_apis;x86_64"

      # Update Android SDK Manager
      - name: Update Android SDK Manager
        run: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --update --sdk_root=$ANDROID_SDK_ROOT

      # Start ADB server
      - name: Start ADB server
        run: adb start-server  # Assuming ADB is installed and in PATH

      # Create AVDs
      - name: Create AVD emulator-5554
        run: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd --force --name emulator-5554 --package 'system-images;android-29;google_apis;x86_64' --device 'pixel' --sdcard 512M

      - name: Create AVD emulator-5556
        run: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd --force --name emulator-5556 --package 'system-images;android-29;google_apis;x86_64' --device 'pixel' --sdcard 512M

      - name: List emulator devices (Force Refresh)
        run: avdmanager list avd
      
      # Start Emulator Devices
      - name: Start Emulator Devices
        run: |
          ($ANDROID_SDK_ROOT/emulator/emulator -avd emulator-5554 -port 4725 -no-snapshot -no-boot-anim -no-window -http-proxy localhost -no-audio -memory 2048 -wipe-data -verbose &) &
          ($ANDROID_SDK_ROOT/emulator/emulator -avd emulator-5556 -port 4727 -no-snapshot -no-boot-anim -no-window -http-proxy localhost -no-audio -memory 2048 -wipe-data -verbose &) &
          sleep 600
      
        
      - name: Verify Emulator Status
        run: adb devices
        shell: bash

      # Run Appium tests
      - name: Run Appium tests
        run: |
          cd android
          mvn clean test -Dsurefire.suiteXmlFiles=regression.xml -f pom.xml -X

      # Upload success reports
      - name: Upload success reports
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-success
          path: android/reports

      # Upload failure reports (optional)
      - name: Upload failure reports
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-failure
          path: android/reports
        if: failure()

      # Stop emulator (optional)
      - name: Stop emulator
        run: adb emu kill &  # Background process to avoid interrupting tests
